{{- if .Values.database.redis.enabled }}
apiVersion: redis.redis.opstreelabs.in/v1beta1
kind: Redis
metadata:
  name: {{ include "laravel.fullname" . }}-redis
  labels:
    {{- include "laravel.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
spec:
  redisExporter:
    enabled: false
    image: "quay.io/opstree/redis-exporter:v1.44.0"
    imagePullPolicy: "IfNotPresent"
    resources:
      {}
  kubernetesConfig:
    image: "quay.io/opstree/redis:v7.0.5"
    imagePullPolicy: "IfNotPresent"
    resources:
    {{- toYaml .Values.database.redis.resources | nindent 8 }}
  storage:
    volumeClaimTemplate:
      spec:
        storageClassName: {{ .Values.database.redis.storage.storageClass }}
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.database.redis.storage.size }}
  podSecurityContext:
    fsGroup: 1000
    runAsUser: 1000
{{- end }}
---
{{- if .Values.database.postgres.enabled }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ include "laravel.fullname" . }}-postgres
  labels:
    {{- include "laravel.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
spec:
  instances: {{ .Values.database.postgres.instances }}
  bootstrap:
    initdb:
      database: app
      owner: app
  resources:
  {{- toYaml .Values.database.postgres.resources | nindent 4 }}
  storage:
    storageClass: {{ .Values.database.postgres.storage.storageClass }}
    size: {{ .Values.database.postgres.storage.size }}
{{- end }}
---